#!/usr/bin/env python
# Version: v.23.08.03
# -*- coding: utf-8 -*-

import shutil
import sys
try:
    from venvwaftlib import *
except IOError:
    logger.error("Run 'odoo-code-pre-clean' python script in '.venv-waft' virtual environment.")
    exit(1)

if WAFT_CLEAN == 'true':
    if os.listdir(CODE_ODOO_DIRECTORY):
        for scrap in os.listdir(CODE_ODOO_DIRECTORY):
            if scrap in {'enterprise', 'private'}:
                continue
            scrap_path = os.path.join(CODE_ODOO_DIRECTORY, scrap)
            if os.path.isfile(scrap_path):
                try:
                    os.remove(scrap_path)
                except IOError:
                    logger.error("Can't remove '%s' file.", scrap_path)
                    exit(1)
            elif os.path.isdir(scrap_path):
                try:
                    shutil.rmtree(scrap_path)
                except IOError:
                    logger.error("Can't remove '%s' directory.", scrap_path)
                    exit(1)
    else:
        logger.info("The %s directory is already empty.", CODE_ODOO_DIRECTORY)
else:
    addons_repositories_full_paths = set([ODOO_MAIN_CODE_PATH])
    with open(CODE_ODOO_YAML_FILE) as code_odoo_yaml_file:
        for addons_repository_path in yaml.safe_load(code_odoo_yaml_file):
            addons_repositories_full_paths.add(os.path.abspath(os.path.join(CODE_ODOO_DIRECTORY, addons_repository_path)))
        for addons_repository_full_path in addons_repositories_full_paths:
            print(addons_repository_full_path)
            if not os.path.isdir(os.path.join(addons_repository_full_path, '.git')):
                shutil.rmtree(addons_repository_full_path)
                continue
            if not os.path.isdir(os.path.join(addons_repository_full_path, '.git/refs')):
                shutil.rmtree(addons_repository_full_path)
                continue
            if not os.path.isdir(os.path.join(addons_repository_full_path, '.git/objects')):
                shutil.rmtree(addons_repository_full_path)
                continue
            try:
                check_call(
                    [ "git", "-C", addons_repository_full_path, "reset", "--hard", "HEAD", ],
                    cwd=CODE_ODOO_DIRECTORY,
                    stderr=sys.stderr,
                    stdout=sys.stdout,
                )
                check_call(
                    [ "git", "-C", addons_repository_full_path, "clean", "-fd", ],
                    cwd=CODE_ODOO_DIRECTORY,
                    stderr=sys.stderr,
                    stdout=sys.stdout,
                )
            except GitError:
                shutil.rmtree(addons_repository_full_path)
