#!/bin/bash
# Version: v.22.05.30

exit 0

################################################################
######                                                    ######
######       Don't change variables after this line       ######
######                                                    ######
################################################################

SCRIPT_PATH="$(cd "$(/usr/bin/dirname "${0}")" && /bin/pwd)"
ODOO_WORK_DIR="${SCRIPT_PATH}"
ODOO_MAIN_WORK_DIR="${SCRIPT_PATH}"
cd "${ODOO_WORK_DIR}"
. "${ODOO_WORK_DIR}/.env-shared" && \
. "${ODOO_WORK_DIR}/.env-secret"
ODOO_EXIST_VERSION="${ODOO_VERSION}"

ODOO_DESTINATION_VERSION="${ODOO_DESTINATION_VERSION:-$(("$(/bin/echo "${ODOO_VERSION}" | /usr/bin/cut -d'.' -f1)" + 1)).0}"
BACKUP_BEFORE_MIGRATION="${BACKUP_BEFORE_MIGRATION:-true}"
RUN_MIGRATION_DEFAULT_SCRIPT="${RUN_MIGRATION_DEFAULT_SCRIPT:-true}"

if [ -f "${ODOO_WORK_DIR}/.env-migrate" ]; then
  . "${ODOO_WORK_DIR}/.env-migrate"
fi

ODOO_START_FROM_VERSION="${ODOO_VERSION}"

if [ "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" -lt '6' ]; then
  /bin/echo "Waft does not support migration from ${ODOO_START_FROM_VERSION}"
  exit 1
fi

if [ "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" -ge '14' ]; then
  /bin/echo "Waft does not support migration from "${ODOO_START_FROM_VERSION}" yet"
  exit 1
fi

if [ "${ODOO_DESTINATION_VERSION}" == "" ]; then
  /bin/echo "ODOO_DESTINATION_VERSION variable should be defined"
else
  if [ ! -n "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
    /bin/echo "ODOO_DESTINATION_VERSION variable should be a number xx.x"
    exit 1
  else
    if [ "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" -gt '14' ]; then
      /bin/echo "Waft does not support migration to ${ODOO_DESTINATION_VERSION} yet"
      exit 1
    else
      if [ "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" -ge "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
        /bin/echo "ODOO_DESTINATION_VERSION variable should be greater than ODOO_START_FROM_VERSION variable"
        exit 1
      fi
    fi
  fi
fi

if [ ! -f "${ODOO_WORK_DIR}/.slide" ]; then
  /bin/echo "this script will migrate your odoo from ${ODOO_START_FROM_VERSION} to ${ODOO_DESTINATION_VERSION}, if you are sure please touch ${ODOO_WORK_DIR}/.slide file and run ${ODOO_WORK_DIR}/migrate script again"
  /bin/echo "/usr/bin/touch ${ODOO_WORK_DIR}/.slide"
  /bin/echo "${ODOO_WORK_DIR}/migrate"
  exit 1
else
  /bin/rm -fr "${ODOO_WORK_DIR}/.slide"
fi

if [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'true' ] && [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'TRUE' ] && [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'True' ] ; then
  if [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'false' ] || [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'FALSE' ] || [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" != 'False' ] ; then
    eval RUN_MIGRATION_DEFAULT_SCRIPT='false'
  else
    /bin/echo "RUN_MIGRATION_DEFAULT_SCRIPT variable should be true or false"
    exit 1
  fi
else
  if [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" == 'true' ] || [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" == 'TRUE' ] || [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" == 'True' ] ; then
    eval RUN_MIGRATION_DEFAULT_SCRIPT='true'
  else
    /bin/echo "RUN_MIGRATION_DEFAULT_SCRIPT variable should be true or false"
    exit 1
  fi
fi

if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -eq "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
  if [ "${BACKUP_BEFORE_MIGRATION}" != 'true' ] && [ "${BACKUP_BEFORE_MIGRATION}" != 'TRUE' ] && [ "${BACKUP_BEFORE_MIGRATION}" != 'True' ] ; then
    if [ "${BACKUP_BEFORE_MIGRATION}" != 'false' ] || [ "${BACKUP_BEFORE_MIGRATION}" != 'FALSE' ] || [ "${BACKUP_BEFORE_MIGRATION}" != 'False' ] ; then
      eval BACKUP_BEFORE_MIGRATION='false'
    else
      /bin/echo "BACKUP_BEFORE_MIGRATION variable should be true or false"
      exit 1
    fi
  else
    if [ "${BACKUP_BEFORE_MIGRATION}" == 'true' ] || [ {${BACKUP_BEFORE_MIGRATION}} == 'TRUE' ] || [ "${BACKUP_BEFORE_MIGRATION}" == 'True' ] ; then
      eval BACKUP_BEFORE_MIGRATION='true'
    else
      /bin/echo "BACKUP_BEFORE_MIGRATION variable should be true or false"
      exit 1
    fi
  fi
fi

/bin/mkdir -p "${ODOO_WORK_DIR}/migrate-logfiles"
if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log" ] ; then
  if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.1" ] ; then
    if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.2" ] ; then
      if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.3" ] ; then
        if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.4" ] ; then
          if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.5" ] ; then
            if [ -f "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.6" ] ; then
              /bin/rm -fr "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.6"
            fi
            /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.5" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.6"
          fi
          /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.4" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.5"
        fi
        /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.3" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.4"
      fi
      /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.2" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.3"
    fi
    /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.1" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.2"
  fi
  /bin/mv "${ODOO_WORK_DIR}/migrate-logfiles/migration.log" "${ODOO_WORK_DIR}/migrate-logfiles/migration.log.1"
fi
/usr/bin/touch "${ODOO_WORK_DIR}/migrate-logfiles/migration.log"

newline() {
  printf %${1}s | tr " " "\n"
}

logexec() {
  newline 4 >> "${ODOO_WORK_DIR}/migrate-logfiles/migration.log"
  /bin/echo "${@}" >> "${ODOO_WORK_DIR}/migrate-logfiles/migration.log"
  "${@}" >> "${ODOO_WORK_DIR}/migrate-logfiles/migration.log" 2>&1
}

/usr/bin/sudo /bin/systemctl stop monit || True
/usr/bin/sudo /bin/systemctl stop odoo || True

CURRENTLY_DATE_STRING="$(/bin/date "+%d-%H-%M-%S")"

if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -eq "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" ] ; then
  if [ "${BACKUP_BEFORE_MIGRATION}" == 'true' ] ; then
    /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-backup"
    /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/code"
    /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/filestore"
    for DATA in $(/bin/ls -1a "${ODOO_WORK_DIR}/") ; do
      if [ "${DATA}" != '.' ] && [ "${DATA}" != '..' ] && [ "${DATA}" != '.env-secret' ] && [ "${DATA}" != '.git' ] && [ "${DATA}" != '.gitignore' ] && [ "${DATA}" != 'migrate-backup' ] && [ "${DATA}" != 'migrate-logfiles' ] && [ "${DATA}" != 'migrate-templates' ] && [ "${DATA}" != 'migrate-temporary' ] && [ "${DATA}" != 'waftlib' ] ; then
        logexec /bin/cp -rp "${ODOO_WORK_DIR}/${DATA}" "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/code/" || exit 1
      fi

    done
    logexec /bin/cp -rp "${HOME}/.local/share/Odoo/filestore/${PGDATABASE}" "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/filestore/" || exit 1
    /bin/echo -e "\n\n\n\n/usr/bin/pg_dump" >> "${ODOO_WORK_DIR}/migrate-logfiles/migration.log"
    /bin/echo "${ODOO_WORK_DIR}/migrate-logfiles/migration.log" >> "${ODOO_WORK_DIR}/migrate-logfiles/migration.log"
    /usr/bin/pg_dump "${PGDATABASE}" -O -x > "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/${PGDATABASE}.sql" || exit 1
  fi
fi

errors_deal() {
  if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -eq "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
    if [ "${BACKUP_BEFORE_MIGRATION}" == 'true' ] ; then
      for DATA in $(/bin/ls -1a "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/code/") ; do
        if [ "${DATA}" != '.' ] && [ "${DATA}" != '..' ] ; then
          /bin/rm -fr "${ODOO_WORK_DIR}/${DATA}"
          logexec /bin/mv "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/code/${DATA}" "${ODOO_WORK_DIR}/"
        fi
      done
      if [ -d "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/filestore/${PGDATABASE}" ]; then
        /bin/rm -fr "${HOME}/.local/share/Odoo/filestore/${PGDATABASE}"
        logexec /bin/mv "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/filestore/${PGDATABASE}" "${HOME}/.local/share/Odoo/filestore/"
      fi
      if [ -f "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/${PGDATABASE}.sql" ]; then
        /usr/bin/dropdb "${PGDATABASE}"
        logexec /usr/bin/psql "${PGDATABASE}" < "${ODOO_WORK_DIR}/migrate-backup/${ODOO_START_FROM_VERSION}-${CURRENTLY_DATE_STRING}/${PGDATABASE}.sql"
      fi
      if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -ne "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
        logexec /bin/sed -i 's|^ODOO_VERSION=.*|ODOO_VERSION="'${ODOO_EXIST_VERSION}'"|g' "${ODOO_WORK_DIR}/.env-secret"
      fi
    fi
  fi
  logexec /usr/bin/sudo /bin/systemctl start odoo || True
  logexec /usr/bin/sudo /bin/systemctl start monit || True
  exit 1
}

trap 'errors_deal' ERR

/bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary"

MIGRATION_TEMPORARY_NAME="${ODOO_START_FROM_VERSION}"

if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -eq "$(/bin/echo "${ODOO_START_FROM_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}"
  /bin/cp -pf "${ODOO_WORK_DIR}/bootstrap" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/"
  if [ ! -f "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/.env-secret" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/.env-secret" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/"
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/.env-shared" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/.env-shared" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/"
  else
    if [ ! -L "${ODOO_WORK_DIR}/.env-shared" ]; then
      /bin/cp -fp "${ODOO_WORK_DIR}/.env-shared" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/"
    else
      /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/.env-shared"
    fi
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/requirements.txt" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/requirements.txt" "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/"
  else
    if [ ! -L "${ODOO_WORK_DIR}/requirements.txt" ]; then
      /bin/cp -fp "${ODOO_WORK_DIR}/requirements.txt" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/"
    else
      /bin/rm -fr "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/requirements.txt"
    fi
  fi
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/common/conf.d"
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/override-odoo.cfg" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/override-odoo.cfg" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/common/conf.d/"
  else
    if [ -f "${ODOO_WORK_DIR}/common/conf.d/override-odoo.cfg" ]; then
      /bin/cp -fp "${ODOO_WORK_DIR}/common/conf.d/override-odoo.cfg" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/common/conf.d/"
    else
      /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/common/conf.d/override-odoo.cfg"
    fi
  fi
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src"
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/repos.yaml" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/repos.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/"
  else
    if [ ! -L "${ODOO_WORK_DIR}/custom/src/repos.yaml" ]; then
      /bin/cp -fp "${ODOO_WORK_DIR}/custom/src/repos.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/"
    else
      /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/repos.yaml"
    fi
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/addons.yaml" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_START_FROM_VERSION}/addons.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/"
  else
    if [ ! -L "${ODOO_WORK_DIR}/custom/src/addons.yaml" ]; then
      /bin/cp -fp "${ODOO_WORK_DIR}/custom/src/addons.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/"
    else
      /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/custom/src/addons.yaml"
    fi
  fi
  /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/.venv"
  logexec "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/bootstrap"
  logexec "${ODOO_WORK_DIR}/migrate-temporary/${ODOO_START_FROM_VERSION}/build"
  eval MIGRATION_TEMPORARY_NAME="$(("$(/bin/echo "${MIGRATION_TEMPORARY_NAME}" | /usr/bin/cut -d'.' -f1)" + 1 )).0"
  eval ODOO_WORK_DIR="${ODOO_MAIN_WORK_DIR}"
fi

until [ "$(/bin/echo "${MIGRATION_TEMPORARY_NAME}" | /usr/bin/cut -d'.' -f1)" -eq "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" ] ; do
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}"
  /bin/cp -pf "${ODOO_WORK_DIR}/bootstrap" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/"
  if [ ! -f "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/.env-secret" ]; then
    /bin/cp -p "${ODOO_WORK_DIR}/.env-secret" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/"
    /bin/sed -i 's|^ODOO_VERSION=.*|ODOO_VERSION="'${MIGRATION_TEMPORARY_NAME}'"|g' "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/.env-secret"
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/.env-shared" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/.env-shared" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/"
  else
    /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/.env-secret"
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/requirements.txt" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/requirements.txt" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/"
  else
    /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/requirements.txt"
  fi
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/common/conf.d"
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/override-odoo.cfg" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/override-odoo.cfg" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/common/conf.d/"
  else
    /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/common/conf.d/override-odoo.cfg"
  fi
  /bin/mkdir -p "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/custom/src"
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/repos.yaml" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/repos.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/custom/src/"
  else
    /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/custom/src/repos.yaml"
  fi
  fi
  if [ -f "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/addons.yaml" ]; then
    /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/addons.yaml" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/custom/src/"
  else
    /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/custom/src/addons.yaml"
  fi
  if [ -d "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/migrate-scripts" ]; then
    /bin/cp -frp "${ODOO_WORK_DIR}/migrate-templates/${MIGRATION_TEMPORARY_NAME}/migrate-scripts" "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/"
  fi
  /bin/rm -fr "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/.venv"
  logexec "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/bootstrap"
  logexec "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/build"
  if [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" == 'true' ] ; then
    if [ -d "${ODOO_WORK_DIR}/waftlib/templates/to-${MIGRATION_TEMPORARY_NAME}-default-migrate-scripts" ]; then
      for MIGRATION_SCRIPT in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/templates/to-${MIGRATION_TEMPORARY_NAME}-default-migrate-scripts/"); do
        if [ -x "${ODOO_WORK_DIR}/waftlib/templates/to-${MIGRATION_TEMPORARY_NAME}-default-migrate-scripts/${MIGRATION_SCRIPT}" ]; then
          logexec "${ODOO_WORK_DIR}/waftlib/templates/to-${MIGRATION_TEMPORARY_NAME}-default-migrate-scripts/${MIGRATION_SCRIPT}"
        fi
      done
    fi
  fi
  if [ -d "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/migrate-scripts" ]; then
    for MIGRATION_SCRIPT in $(/bin/ls -1 "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/migrate-scripts/"); do
      if [ -x "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/migrate-scripts/${MIGRATION_SCRIPT}" ]; then
        logexec "${ODOO_WORK_DIR}/migrate-temporary/${MIGRATION_TEMPORARY_NAME}/migrate-scripts/${MIGRATION_SCRIPT}"
      fi
    done
  fi
  eval MIGRATION_TEMPORARY_NAME="$(("$(/bin/echo "${MIGRATION_TEMPORARY_NAME}" | /usr/bin/cut -d'.' -f1)" + 1 )).0"
  eval ODOO_WORK_DIR="${ODOO_MAIN_WORK_DIR}"
done

if [ "$(/bin/echo "${ODOO_EXIST_VERSION}" | /usr/bin/cut -d'.' -f1)" -ne "$(/bin/echo "${ODOO_DESTINATION_VERSION}" | /usr/bin/cut -d'.' -f1)" ]; then
  /bin/sed -i 's|^ODOO_VERSION=.*|ODOO_VERSION="'${ODOO_DESTINATION_VERSION}'"|g' "${ODOO_WORK_DIR}/.env-secret"
fi
if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/.env-shared" ]; then
  /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/.env-shared" "${ODOO_WORK_DIR}/"
fi
if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/requirements.txt" ]; then
  /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/requirements.txt" "${ODOO_WORK_DIR}/"
fi
if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/override-odoo.cfg" ]; then
  /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/override-odoo.cfg" "${ODOO_WORK_DIR}/common/conf.d/"
fi
if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/repos.yaml" ]; then
  /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/repos.yaml" "${ODOO_WORK_DIR}/custom/src/"
fi
if [ -f "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/addons.yaml" ]; then
  /bin/cp -fp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/addons.yaml" "${ODOO_WORK_DIR}/custom/src/"
fi
if [ -d "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/migrate-scripts" ]; then
  /bin/cp -frp "${ODOO_WORK_DIR}/migrate-templates/${ODOO_DESTINATION_VERSION}/migrate-scripts" "${ODOO_WORK_DIR}/"
fi
/bin/rm -fr "${ODOO_WORK_DIR}/.venv"
logexec "${ODOO_WORK_DIR}/bootstrap"
logexec "${ODOO_WORK_DIR}/build"
if [ "${RUN_MIGRATION_DEFAULT_SCRIPT}" == 'true' ] ; then
  if [ -d "${ODOO_WORK_DIR}/waftlib/templates/to-${ODOO_DESTINATION_VERSION}-default-migrate-scripts" ]; then
    for MIGRATION_SCRIPT in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/templates/to-${ODOO_DESTINATION_VERSION}-default-migrate-scripts/"); do
      if [ -x "${ODOO_WORK_DIR}/waftlib/templates/to-${ODOO_DESTINATION_VERSION}-default-migrate-scripts/${MIGRATION_SCRIPT}" ]; then
        logexec "${ODOO_WORK_DIR}/waftlib/templates/to-${ODOO_DESTINATION_VERSION}-default-migrate-scripts/${MIGRATION_SCRIPT}"
      fi
    done
  fi
fi
if [ -d "${ODOO_WORK_DIR}/migrate-scripts" ]; then
  for MIGRATION_SCRIPT in $(/bin/ls -1 "${ODOO_WORK_DIR}/migrate-scripts/"); do
    if [ -x "${ODOO_WORK_DIR}/migrate-scripts/${MIGRATION_SCRIPT}" ]; then
      logexec "${ODOO_WORK_DIR}/migrate-scripts/${MIGRATION_SCRIPT}"
    fi
  done
fi

/usr/bin/sudo /bin/systemctl start odoo || True
/usr/bin/sudo /bin/systemctl start monit || True

