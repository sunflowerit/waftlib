#!/bin/sh
# Version: v.22.05.30

set -e

SCRIPT_PATH="$(cd "$(/usr/bin/dirname "${0}")" && /bin/pwd)"
ODOO_WORK_DIR="$(cd "${SCRIPT_PATH}/.." && /bin/pwd)"
cd "${ODOO_WORK_DIR}"

  if [ "$(id -u)" -eq 0 ]; then
    /bin/echo "Please don't use sudo command with script"
    exit 1
  fi

if [ -z "${LIBRARIES_VERSION_BRANCH}" ]; then
  if [ "$(/usr/bin/sha1sum "${ODOO_WORK_DIR}/bootstrap" | /usr/bin/awk '{ print $1}')" = "7b53eaced73cc36675859da32bdfb6c2c1c428fe" ] || [ "$(/usr/bin/sha1sum "${ODOO_WORK_DIR}/bootstrap" | /usr/bin/awk '{ print $1}')" = "56f5b836e417fa9c6b1d8cdc2afe5a96c91205a5" ]; then
    /bin/echo "INFO: Update bootstrap script."
    /usr/bin/curl https://raw.githubusercontent.com/sunflowerit/waft/40fa1701a3bd29dd623c2a5a76dedfe66398c28e/bootstrap -o "${ODOO_WORK_DIR}/bootstrap"
    /bin/echo "INFO: Run bootstrap script again."
    "${ODOO_WORK_DIR}/bootstrap"
    /bin/echo "INFO: END"
    exit 0
  else
    /bin/echo "ERROR: ${ODOO_WORK_DIR}/bootstrap files does not have 'LIBRARIES_VERSION_BRANCH' variable! update it by this command:"
    /bin/echo "  /usr/bin/curl https://raw.githubusercontent.com/sunflowerit/waft/master/bootstrap -o ${ODOO_WORK_DIR}/bootstrap"
    exit 1
  fi
fi

/bin/mkdir -p "${ODOO_WORK_DIR}/auto/addons"
/bin/mkdir -p "${ODOO_WORK_DIR}/common/build.d"
/bin/mkdir -p "${ODOO_WORK_DIR}/common/conf.d"
/bin/mkdir -p "${ODOO_WORK_DIR}/common/entrypoint.d"
/bin/mkdir -p "${ODOO_WORK_DIR}/custom/src/private"
/bin/mkdir -p "${ODOO_WORK_DIR}/logfile"

if [ -f "${ODOO_WORK_DIR}/.env-shared" ]; then
  if [ -f "${ODOO_WORK_DIR}/.env-default" ]; then
    if [ -L "${ODOO_WORK_DIR}/.env-default" ]; then
      . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
      /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-default to ${ODOO_WORK_DIR}/.env-default"
      cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/.env-default"
      . "${ODOO_WORK_DIR}/.env-default" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-default"!" && exit 1)
      . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
    else
      /bin/echo "WARNING: ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-default not a default link!"
      . "${ODOO_WORK_DIR}/.env-default" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-default"!" && exit 1)
      . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
    fi
  else
    . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-default to ${ODOO_WORK_DIR}/.env-default"
    cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/.env-default"
    . "${ODOO_WORK_DIR}/.env-default" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-default"!" && exit 1)
    . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
  fi
  if [ -f "${ODOO_WORK_DIR}/.env-secret" ]; then
    . "${ODOO_WORK_DIR}/.env-secret" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-secret"!" && exit 1)
  else
    /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/.env-secret to ${ODOO_WORK_DIR}/."
    /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/.env-secret" "${ODOO_WORK_DIR}/"
    . "${ODOO_WORK_DIR}/.env-secret" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-secret"!" && exit 1)
  fi
else
  if [ -f "${ODOO_WORK_DIR}/.env-default" ]; then
    ODOO_VERSION="$(/bin/ls -lha | /bin/grep "${ODOO_WORK_DIR}/.env-default" | /usr/bin/cut -d '/' -f3)"
    . "${ODOO_WORK_DIR}/.env-default" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-default"!" && exit 1)
  fi
  if [ -f "${ODOO_WORK_DIR}/.env-secret" ]; then
    . "${ODOO_WORK_DIR}/.env-secret" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-secret"!" && exit 1)
  else
    /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/.env-secret to ${ODOO_WORK_DIR}/."
    /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/.env-secret" "${ODOO_WORK_DIR}/"
    . "${ODOO_WORK_DIR}/.env-secret" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-secret"!" && exit 1)
  fi
  if [ "${ODOO_VERSION}" = '' ] ; then
    /bin/echo "ERROR: You should define 'ODOO_VERSION' variable in "${ODOO_WORK_DIR}/.env-secret"."
    exit 1
  else
    if [ "$(/bin/echo "${ODOO_VERSION}" | /bin/sed 's/^[0-9]\+'\.'[0-9]\+$//')" != '' ] ; then
      /bin/echo "ERROR: 'ODOO_VERSION' does not a floating number!"
      exit 1
    else
      if [ ! -f "${ODOO_WORK_DIR}/.env-default" ] || [ -L "${ODOO_WORK_DIR}/.env-default" ]; then
        /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-default to ${ODOO_WORK_DIR}/.env-default"
        cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/.env-default"
      else
        /bin/echo "WARNING: ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-default not a default link!"
      fi
      /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-shared to ${ODOO_WORK_DIR}/."
      /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.env-shared" "${ODOO_WORK_DIR}/"
      . "${ODOO_WORK_DIR}/.env-default" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-default"!" && exit 1)
      . "${ODOO_WORK_DIR}/.env-shared" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-shared"!" && exit 1)
      . "${ODOO_WORK_DIR}/.env-secret" || (/bin/echo "ERROR: Can't load "${ODOO_WORK_DIR}/.env-secret"!" && exit 1)
    fi
  fi
fi

if [ "${ODOO_VERSION}" = '' ] ; then
  /bin/echo "ERROR: You should define 'ODOO_VERSION' variable in "${ODOO_WORK_DIR}/.env-secret""
  exit 1
else
  if [ "$(/bin/echo "${ODOO_VERSION}" | /bin/sed 's/^[0-9]\+'\.'[0-9]\+$//')" != '' ] ; then
    /bin/echo "ERROR: 'ODOO_VERSION' does not a floating number!"
    exit 1
  fi
fi

if [ "$(/bin/echo "${ODOO_VERSION}" | /usr/bin/cut -d'.' -f1)" -lt '6' ]; then
  /bin/echo "ERROR: Waft does not support ${ODOO_VERSION} yet."
  exit 1
fi

if [ "$(/bin/echo ${ODOO_VERSION} | /usr/bin/cut -d'.' -f1)" -gt '17' ]; then
  /bin/echo "ERROR: Waft does not support ${ODOO_VERSION} yet."
  exit 1
fi

if [ ! -f "${ODOO_WORK_DIR}/.python-version" ] || [ -L "${ODOO_WORK_DIR}/.python-version" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/.python-version to ${ODOO_WORK_DIR}/.python-version"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/.python-version"
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/.python-version not a default link!"
fi
if [ ! -f "${ODOO_WORK_DIR}/.python-version" ]; then
  /bin/echo "ERROR: You should create .python-version variable file in ${ODOO_WORK_DIR}"
  exit 1
fi

# If user pre-installed a virtual-environment and .venv already exists,
# we do not need pyenv to install python, nor do we need virtualenv,
# instead the pre-installed version will be used.
if [ -d "${ODOO_WORK_DIR}/.venv" ]; then
  /bin/echo "INFO: ${ODOO_WORK_DIR}/.venv exist!"
else
  if [ -f "${ODOO_WORK_DIR}/.venv" ]; then
    /bin/echo "ERROR: ${ODOO_WORK_DIR}/.venv not a directory!"
    exit 1
  fi
  # Install pyenv
  export CFLAGS="-O2"
  export PYENV_ROOT="${ODOO_WORK_DIR}"/.pyenv
  if [ -f "${ODOO_WORK_DIR}/.pyenv" ]; then
    /bin/echo "ERROR: ${ODOO_WORK_DIR}/.pyenv not a directory!"
    exit 1
  fi
  if [ ! -d "${ODOO_WORK_DIR}/.pyenv" ]; then
    /bin/echo "INFO: Clone https://github.com/pyenv/pyenv in ${PYENV_ROOT}"
    /usr/bin/git clone https://github.com/pyenv/pyenv "${PYENV_ROOT}"
  else
    /bin/echo "INFO: ${ODOO_WORK_DIR}/.pyenv exist! Upgrading to latest..."
    cd "${PYENV_ROOT}" && /usr/bin/git checkout master && /usr/bin/git pull origin master && cd - || { /bin/echo 'Failed to upgrade pyenv'; exit 1; }
  fi
  PATH="${PYENV_ROOT}/shims:${PYENV_ROOT}/bin:${PATH}"
  PYENV="${PYENV_ROOT}/bin/pyenv"
  eval "$("${PYENV}" init -)"
  "${PYENV}" install -s

  PYVERSION="$(python -V 2>&1 | /bin/sed 's/^Python //; s/\.[0-9]*$//')"
  /bin/echo "Python version is ${PYVERSION}"

  # Install virtualenv
  VIRTUALENV="${PYENV_ROOT}/bin/virtualenv.pyz"
  /bin/echo "INFO: Download ${VIRTUALENV}"
  /usr/bin/wget --no-check-certificate "https://bootstrap.pypa.io/virtualenv/${PYVERSION}/virtualenv.pyz" -O "${VIRTUALENV}" || { /bin/echo 'Download of virtualenv package failed' ; exit 1; }
  /bin/echo "INFO: Build virtual environment in ${ODOO_WORK_DIR}/.venv"
  python "${VIRTUALENV}" .venv || { /bin/echo 'Virtualenv creation failed' ; exit 1; }
fi

if [ ! -f "${ODOO_WORK_DIR}/build" ] || [ -L "${ODOO_WORK_DIR}/build" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/build to ${ODOO_WORK_DIR}/build"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/build
else
  /bin/echo "WARNING: "${ODOO_WORK_DIR}/build" not a default link!"
fi

for fiLe in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/build.d/"); do
  if [ ! -f "${ODOO_WORK_DIR}/common/build.d/${fiLe}" ] || [ -L "${ODOO_WORK_DIR}/common/build.d/${fiLe}" ]; then
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/build.d/${fiLe} to ${ODOO_WORK_DIR}/common/build.d/${fiLe}"
    cd "${ODOO_WORK_DIR}/common/build.d" && /bin/ln -sf "../../waftlib/build.d/${fiLe}"
    cd "${ODOO_WORK_DIR}"
  else
    /bin/echo "WARNING: ${ODOO_WORK_DIR}/common/build.d/${fiLe} not a default link!"
  fi
done

if [ ! -f "${ODOO_WORK_DIR}/common/build" ] || [ -L "${ODOO_WORK_DIR}/common/build" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/bin/direxec to ${ODOO_WORK_DIR}/common/build"
  cd "${ODOO_WORK_DIR}/common" && /bin/ln -sf ../waftlib/bin/direxec build
  cd "${ODOO_WORK_DIR}"
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/common/build not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/common/conf.d/odoo.cfg" ] || [ -L "${ODOO_WORK_DIR}/common/conf.d/odoo.cfg" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/odoo.cfg to ${ODOO_WORK_DIR}/common/conf.d/odoo.cfg"
  cd "${ODOO_WORK_DIR}/common/conf.d" && /bin/ln -sf "../../waftlib/templates/${ODOO_VERSION}/odoo.cfg"
  cd "${ODOO_WORK_DIR}"
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/common/conf.d/odoo.cfg not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/common/conf.d/override-odoo.cfg" ]; then
  /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/override-odoo.cfg to ${ODOO_WORK_DIR}/common/conf.d/override-odoo.cfg"
  /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/override-odoo.cfg" "${ODOO_WORK_DIR}/common/conf.d/"
fi

for fiLe in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/entrypoint.d/"); do
  if [ ! -f "${ODOO_WORK_DIR}/common/entrypoint.d/${fiLe}" ] || [ -L "${ODOO_WORK_DIR}/common/entrypoint.d/${fiLe}" ]; then
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/entrypoint.d/${fiLe} to ${ODOO_WORK_DIR}/common/entrypoint.d/${fiLe}"
    cd "${ODOO_WORK_DIR}/common/entrypoint.d" && /bin/ln -sf "../../waftlib/entrypoint.d/${fiLe}"
    cd "${ODOO_WORK_DIR}"
  else
    /bin/echo "WARNING: ${ODOO_WORK_DIR}/common/entrypoint.d/${fiLe} not a default link!"
  fi
done

if [ ! -f "${ODOO_WORK_DIR}/common/entrypoint" ] || [ -L "${ODOO_WORK_DIR}/common/entrypoint" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/bin/direxec to ${ODOO_WORK_DIR}/common/entrypoint"
  cd "${ODOO_WORK_DIR}/common" && /bin/ln -sf ../waftlib/bin/direxec entrypoint
  cd "${ODOO_WORK_DIR}"
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/common/entrypoint not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/custom/src/addons.yaml" ]; then
  /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/addons.yaml to ${ODOO_WORK_DIR}/custom/src/addons.yaml"
  /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/addons.yaml" "${ODOO_WORK_DIR}/custom/src/"
  cd "${ODOO_WORK_DIR}"
fi

if [ ! -f "${ODOO_WORK_DIR}/custom/src/repos.yaml" ]; then
  /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/repos.yaml to ${ODOO_WORK_DIR}/custom/src/repos.yaml"
  /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/repos.yaml" "${ODOO_WORK_DIR}/custom/src/"
  cd "${ODOO_WORK_DIR}"
fi

if [ ! -f "${ODOO_WORK_DIR}/initial-database" ] || [ -L "${ODOO_WORK_DIR}/initial-database" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/initial-database to ${ODOO_WORK_DIR}/initial-database"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/initial-database
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/initial-database not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/install" ] || [ -L "${ODOO_WORK_DIR}/install" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/install to ${ODOO_WORK_DIR}/install"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/install
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/install not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/odoo-service" ] || [ -L "${ODOO_WORK_DIR}/odoo-service" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/odoo-service to ${ODOO_WORK_DIR}/odoo-service"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/odoo-service
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/odoo-service not a default link!"
fi

if [ -f "${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/requirements-remove-default.txt" ]; then
  if [ ! -f "${ODOO_WORK_DIR}/requirements-remove-default.txt" ] || [ -L "${ODOO_WORK_DIR}/requirements-remove-default.txt" ]; then
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/requirements-remove-default.txt to ${ODOO_WORK_DIR}/requirements-remove-default.txt"
    cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/requirements-remove-default.txt"
  else
    /bin/echo "WARNING: ${ODOO_WORK_DIR}/requirements-remove-default.txt not a default link!"
  fi
fi

if [ ! -f "${ODOO_WORK_DIR}/requirements-default.txt" ] || [ -L "${ODOO_WORK_DIR}/requirements-default.txt" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/templates/${ODOO_VERSION}/requirements-default.txt to ${ODOO_WORK_DIR}/requirements-default.txt"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf "waftlib/templates/${ODOO_VERSION}/requirements-default.txt"
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/requirements-default.txt not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/requirements.txt" ]; then
  /bin/echo "INFO: Copy ${ODOO_WORK_DIR}/waftlib/templates/requirements.txt to ${ODOO_WORK_DIR}/."
  /bin/cp "${ODOO_WORK_DIR}/waftlib/templates/requirements.txt" "${ODOO_WORK_DIR}/"
fi

if [ ! -f "${ODOO_WORK_DIR}/run" ] || [ -L "${ODOO_WORK_DIR}/run" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/run to ${ODOO_WORK_DIR}/run"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/run
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/run not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/shell" ] || [ -L "${ODOO_WORK_DIR}/shell" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/shell to ${ODOO_WORK_DIR}/shell"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/shell
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/shell not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/translate-modules" ] || [ -L "${ODOO_WORK_DIR}/translate-modules" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/translate-modules to ${ODOO_WORK_DIR}/translate-modules"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/translate-modules
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/translate-modules not a default link!"
fi

if [ ! -f "${ODOO_WORK_DIR}/upgrade" ] || [ -L "${ODOO_WORK_DIR}/upgrade" ]; then
  /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/upgrade to ${ODOO_WORK_DIR}/upgrade"
  cd "${ODOO_WORK_DIR}" && /bin/ln -sf waftlib/upgrade
else
  /bin/echo "WARNING: ${ODOO_WORK_DIR}/upgrade not a default link!"
fi

for fiLe in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/bin/"); do
  if [ ! -f "${ODOO_WORK_DIR}/.venv/bin/${fiLe}" ] || [ -L "${ODOO_WORK_DIR}/.venv/bin/${fiLe}" ]; then
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/bin/${fiLe} to ${ODOO_WORK_DIR}/.venv/bin/${fiLe}"
    cd "${ODOO_WORK_DIR}/.venv/bin" && /bin/ln -sf "../../waftlib/bin/${fiLe}"
    cd "${ODOO_WORK_DIR}"
  else
    /bin/echo "WARNING: ${ODOO_WORK_DIR}/.venv/bin/${fiLe} not a default link!"
  fi
done
/bin/rm -fr "${ODOO_WORK_DIR}/.venv/bin/direxec"

cd "${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages" && /bin/mkdir -p waftlib
cd "${ODOO_WORK_DIR}"
for fiLe in $(/bin/ls -1 "${ODOO_WORK_DIR}/waftlib/waftlib/"); do
  if [ ! -f "${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages/waftlib/${fiLe}" ] || [ -L "${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages/waftlib/${fiLe}" ]; then
    /bin/echo "INFO: Link ${ODOO_WORK_DIR}/waftlib/waftlib/${fiLe} to ${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages/waftlib/${fiLe}"
    cd "${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages/waftlib" && /bin/ln -sf "../../../../../waftlib/waftlib/${fiLe}"
    cd "${ODOO_WORK_DIR}"
  else
    /bin/echo "WARNING: ${ODOO_WORK_DIR}/.venv/lib/"*"/site-packages/waftlib/${fiLe} not a default link!"
  fi
done

# set permissions
/bin/echo "INFO: Fix files permissions"
/bin/chmod 750 "${ODOO_WORK_DIR}" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/auto" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/auto/addons" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/bootstrap" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/build" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/common" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/common/conf.d" || true
/bin/chmod -f 640 "${ODOO_WORK_DIR}/common/conf.d/odoo.cfg" || true
/bin/chmod -f 640 "${ODOO_WORK_DIR}/common/conf.d/override-odoo.cfg" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/common/entrypoint.d" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/common/entrypoint.d/"* || true
/bin/chmod 750 "${ODOO_WORK_DIR}/common/build.d" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/common/build.d/"* || true
/bin/chmod 750 "${ODOO_WORK_DIR}/custom" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/custom/src" || true
/bin/chmod -f 640 "${ODOO_WORK_DIR}/custom/src/addons.yaml" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/custom/src/private/" || true
/bin/chmod -f 640 "${ODOO_WORK_DIR}/custom/src/repos.yaml" || true
/bin/chmod -f 600 "${ODOO_WORK_DIR}/.env-default" || true
/bin/chmod -f 600 "${ODOO_WORK_DIR}/.env-shared" || true
/bin/chmod -f 600 "${ODOO_WORK_DIR}/.env-secret" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/initial-database" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/install" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/odoo-service" || true
/bin/chmod 640 "${ODOO_WORK_DIR}/.python-version" || true
/bin/chmod 640 "${ODOO_WORK_DIR}/requirements-default.txt" || true
/bin/chmod 640 "${ODOO_WORK_DIR}/requirements.txt" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/run" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/bin" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/waftlib/bin/"* || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/build" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/initial-database" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/install" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/odoo-service" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/run" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/shell" || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/upgrade" || true
find "${ODOO_WORK_DIR}/waftlib/templates" -type d -exec /bin/chmod 750 {} \; || true
find "${ODOO_WORK_DIR}/waftlib/templates" -type f -exec /bin/chmod 640 {} \; || true
/bin/chmod 750 "${ODOO_WORK_DIR}/waftlib/waftlib" || true
/bin/chmod 740 "${ODOO_WORK_DIR}/waftlib/waftlib/"* || true
/bin/echo "INFO: END of bootstrap ${ODOO_WORK_DIR}/script"
