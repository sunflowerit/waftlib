#!/usr/bin/env python
# Version: v.22.05.30
# -*- coding: utf-8 -*-
import os
import shutil
import sys
import yaml

from dotenv import load_dotenv
from subprocess import check_call

from waftlib import ODOO_DIR, PRIVATE_DIR, SRC_DIR, addons_config, logger, REPOS_YAML

SCRIPT_PATH = os.path.abspath(os.path.dirname(__file__))
os.environ['ODOO_WORK_DIR'] = os.path.realpath(os.path.join(SCRIPT_PATH, "../.."))
load_dotenv(os.path.join(os.environ["ODOO_WORK_DIR"], ".env-default"))
load_dotenv(os.path.join(os.environ["ODOO_WORK_DIR"], ".env-shared"), override=True)
load_dotenv(os.path.join(os.environ["ODOO_WORK_DIR"], ".env-secret"), override=True)

repos = set([ODOO_DIR])
with open(REPOS_YAML) as yaml_file:
    for doc in yaml.safe_load_all(yaml_file):
        for repo in doc:
            repos.add(os.path.abspath(os.path.join(SRC_DIR, repo)))

for directory in repos:
    print(directory)
    if not os.path.isdir(directory):
        continue
    if not os.path.isdir(os.path.join(directory, '.git')):
        shutil.rmtree(directory)
        continue
    if not os.path.isdir(os.path.join(directory, '.git/refs')):
        shutil.rmtree(directory)
        continue
    if not os.path.isdir(os.path.join(directory, '.git/objects')):
        shutil.rmtree(directory)
        continue
    # https://stackoverflow.com/q/3921409
    # TODO: more subtle to call "git am --abort"
    if os.path.isdir(os.path.join(directory, '.git/rebase-apply')):
        shutil.rmtree(directory)
        continue
    # TODO: more subtle to call "git merge --abort"
    if os.path.isdir(os.path.join(directory, '.git/rebase-merge')):
        shutil.rmtree(directory)
        continue
    try:
        check_call(
            [
                "git",
                "-C",
                directory,
                "reset",
                "--hard",
                "HEAD",
            ],
            cwd=SRC_DIR,
            stderr=sys.stderr,
            stdout=sys.stdout,
        )
        check_call(
            [
                "git",
                "-C",
                directory,
                "clean",
                "-fd",
            ],
            cwd=SRC_DIR,
            stderr=sys.stderr,
            stdout=sys.stdout,
        )
    except:
        shutil.rmtree(directory)
